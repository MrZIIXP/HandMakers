'use client'
import { useState } from 'react'
import { Button } from '../ui/button'
import { Badge } from '../ui/badge'
import { Card, CardContent } from '../ui/card'
import { Avatar, AvatarFallback, AvatarImage } from '../ui/avatar'
import { Tabs, TabsContent, TabsList, TabsTrigger } from '../ui/tabs'
import { ProductCard } from '../ProductCard'
import { VideoCard } from '../VideoCard'
import {
	MapPin,
	Star,
	Calendar,
	Award,
	MessageCircle,
	Heart,
	Share2,
	ChevronLeft,
	Package,
	Eye,
	Users,
} from 'lucide-react'
import { mockProducts, mockSellers, mockVideos } from '../../data/mockData'

export function SellerPage({ sellerId, onNavigate }) {
	const [isFollowing, setIsFollowing] = useState(false)

	const seller = mockSellers.find(s => s.id === sellerId)
	const sellerProducts = mockProducts.filter(p => p.sellerId === sellerId)
	const sellerVideos = mockVideos.filter(v => v.sellerId === sellerId)

	if (!seller) {
		return (
			<div className='container mx-auto px-4 py-16 text-center'>
				<h1 className='text-2xl font-bold text-gray-900 mb-4'>
					–ü—Ä–æ–¥–∞–≤–µ—Ü –Ω–µ –Ω–∞–π–¥–µ–Ω
				</h1>
				<Button onClick={() => onNavigate('marketplace')}>
					–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∫–∞—Ç–∞–ª–æ–≥—É
				</Button>
			</div>
		)
	}

	const stats = [
		{ icon: Package, label: '–¢–æ–≤–∞—Ä–æ–≤', value: sellerProducts.length },
		{ icon: Star, label: '–†–µ–π—Ç–∏–Ω–≥', value: seller.rating },
		{ icon: Award, label: '–ü—Ä–æ–¥–∞–∂', value: seller.totalSales },
		{ icon: Users, label: '–ü–æ–¥–ø–∏—Å—á–∏–∫–æ–≤', value: '1.2K' },
	]

	const achievements = [
		{
			id: '1',
			title: '–õ—É—á—à–∏–π –ø—Ä–æ–¥–∞–≤–µ—Ü –º–µ—Å—è—Ü–∞',
			icon: 'üèÜ',
			date: '–§–µ–≤—Ä–∞–ª—å 2024',
		},
		{ id: '2', title: '–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å', icon: '‚≠ê', date: '–Ø–Ω–≤–∞—Ä—å 2024' },
		{ id: '3', title: '–ù–∞–¥–µ–∂–Ω—ã–π –ø–∞—Ä—Ç–Ω–µ—Ä', icon: 'üõ°Ô∏è', date: '–î–µ–∫–∞–±—Ä—å 2023' },
	]

	return (
		<div className='min-h-screen bg-gray-50'>
			{/* Header */}
			<div className='bg-gradient-to-r from-blue-600 to-blue-700 text-white'>
				<div className='container mx-auto px-4 py-8'>
					<Button
						variant='ghost'
						onClick={() => onNavigate('marketplace')}
						className='mb-6 text-white hover:bg-white/10'
					>
						<ChevronLeft className='w-4 h-4 mr-2' />
						–ù–∞–∑–∞–¥ –∫ –∫–∞—Ç–∞–ª–æ–≥—É
					</Button>

					<div className='flex flex-col lg:flex-row gap-8 items-start'>
						{/* Profile */}
						<div className='flex flex-col sm:flex-row gap-6 items-center sm:items-start'>
							<Avatar className='w-32 h-32'>
								<AvatarImage src={seller.avatar} />
								<AvatarFallback className='text-3xl'>
									{seller.name.charAt(0)}
								</AvatarFallback>
							</Avatar>

							<div className='text-center sm:text-left space-y-4'>
								<div>
									<h1 className='text-3xl font-bold mb-2'>{seller.name}</h1>
									<div className='flex items-center justify-center sm:justify-start space-x-4 text-blue-100'>
										<div className='flex items-center space-x-1'>
											<MapPin className='w-4 h-4' />
											<span>{seller.location}</span>
										</div>
										<div className='flex items-center space-x-1'>
											<Calendar className='w-4 h-4' />
											<span>
												–° {new Date(seller.joinedDate).getFullYear()} –≥–æ–¥–∞
											</span>
										</div>
									</div>
								</div>

								<p className='text-blue-100 max-w-md'>{seller.description}</p>

								<div className='flex flex-col sm:flex-row gap-3'>
									<Button
										variant='secondary'
										onClick={() => setIsFollowing(!isFollowing)}
										className='bg-white text-blue-600 hover:bg-blue-50'
									>
										<Heart
											className={`w-4 h-4 mr-2 ${
												isFollowing ? 'fill-current' : ''
											}`}
										/>
										{isFollowing ? '–û—Ç–ø–∏—Å–∞—Ç—å—Å—è' : '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è'}
									</Button>
									<Button
										variant='outline'
										className='border-white text-white hover:bg-white/10'
									>
										<MessageCircle className='w-4 h-4 mr-2' />
										–ù–∞–ø–∏—Å–∞—Ç—å
									</Button>
									<Button
										variant='outline'
										className='border-white text-white hover:bg-white/10'
									>
										<Share2 className='w-4 h-4' />
									</Button>
								</div>
							</div>
						</div>

						{/* Stats */}
						<div className='flex-1 w-full'>
							<div className='grid grid-cols-2 lg:grid-cols-4 gap-4'>
								{stats.map((stat, index) => (
									<div
										key={index}
										className='bg-white/10 rounded-lg p-4 text-center'
									>
										<stat.icon className='w-6 h-6 mx-auto mb-2' />
										<div className='text-2xl font-bold'>{stat.value}</div>
										<div className='text-sm text-blue-100'>{stat.label}</div>
									</div>
								))}
							</div>
						</div>
					</div>
				</div>
			</div>

			<div className='container mx-auto px-4 py-8'>
				<Tabs defaultValue='products' className='w-full'>
					<TabsList className='grid w-full lg:w-auto grid-cols-3'>
						<TabsTrigger value='products'>
							–¢–æ–≤–∞—Ä—ã ({sellerProducts.length})
						</TabsTrigger>
						<TabsTrigger value='videos'>
							–í–∏–¥–µ–æ ({sellerVideos.length})
						</TabsTrigger>
						<TabsTrigger value='about'>–û –ø—Ä–æ–¥–∞–≤—Ü–µ</TabsTrigger>
					</TabsList>

					<TabsContent value='products' className='mt-8'>
						{sellerProducts.length > 0 ? (
							<div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6'>
								{sellerProducts.map(product => (
									<ProductCard
										key={product.id}
										product={product}
										onProductClick={id =>
											onNavigate('product', { productId: id })
										}
										onSellerClick={id => onNavigate('seller', { sellerId: id })}
									/>
								))}
							</div>
						) : (
							<div className='text-center py-16'>
								<Package className='w-24 h-24 text-gray-300 mx-auto mb-4' />
								<h3 className='text-lg font-semibold text-gray-900 mb-2'>
									–ü–æ–∫–∞ –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤
								</h3>
								<p className='text-gray-600'>
									–ü—Ä–æ–¥–∞–≤–µ—Ü –µ—â–µ –Ω–µ –¥–æ–±–∞–≤–∏–ª —Ç–æ–≤–∞—Ä—ã –≤ –∫–∞—Ç–∞–ª–æ–≥
								</p>
							</div>
						)}
					</TabsContent>

					<TabsContent value='videos' className='mt-8'>
						{sellerVideos.length > 0 ? (
							<div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6'>
								{sellerVideos.map(video => (
									<VideoCard
										key={video.id}
										video={video}
										onVideoClick={id => console.log('Play video:', id)}
										onSellerClick={id => onNavigate('seller', { sellerId: id })}
									/>
								))}
							</div>
						) : (
							<div className='text-center py-16'>
								<Eye className='w-24 h-24 text-gray-300 mx-auto mb-4' />
								<h3 className='text-lg font-semibold text-gray-900 mb-2'>
									–ü–æ–∫–∞ –Ω–µ—Ç –≤–∏–¥–µ–æ
								</h3>
								<p className='text-gray-600'>
									–ü—Ä–æ–¥–∞–≤–µ—Ü –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª –æ–±—É—á–∞—é—â–∏–µ –≤–∏–¥–µ–æ
								</p>
							</div>
						)}
					</TabsContent>

					<TabsContent value='about' className='mt-8'>
						<div className='grid lg:grid-cols-3 gap-8'>
							<div className='lg:col-span-2 space-y-6'>
								<Card>
									<CardContent className='p-6'>
										<h3 className='text-lg font-semibold mb-4'>–û –º–∞—Å—Ç–µ—Ä–µ</h3>
										<p className='text-gray-700 leading-relaxed mb-4'>
											{seller.description}
										</p>
										<p className='text-gray-700 leading-relaxed'>
											–ó–∞–Ω–∏–º–∞—é—Å—å –∫–µ—Ä–∞–º–∏–∫–æ–π —É–∂–µ –±–æ–ª–µ–µ 10 –ª–µ—Ç. –ù–∞—á–∏–Ω–∞–ª–∞ –∫–∞–∫ —Ö–æ–±–±–∏,
											–∞ —Ç–µ–ø–µ—Ä—å —ç—Ç–æ —Å—Ç–∞–ª–æ –¥–µ–ª–æ–º –≤—Å–µ–π –º–æ–µ–π –∂–∏–∑–Ω–∏. –ö–∞–∂–¥–æ–µ –∏–∑–¥–µ–ª–∏–µ
											—Å–æ–∑–¥–∞–µ—Ç—Å—è —Å –æ—Å–æ–±–æ–π –ª—é–±–æ–≤—å—é –∏ –≤–Ω–∏–º–∞–Ω–∏–µ–º –∫ –¥–µ—Ç–∞–ª—è–º.
											–ò—Å–ø–æ–ª—å–∑—É—é —Ç–æ–ª—å–∫–æ —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏ —á–∏—Å—Ç—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏
											—Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ —Ä—É—á–Ω–æ–π –ª–µ–ø–∫–∏.
										</p>
									</CardContent>
								</Card>

								<Card>
									<CardContent className='p-6'>
										<h3 className='text-lg font-semibold mb-4'>
											–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
										</h3>
										<div className='flex flex-wrap gap-2'>
											<Badge variant='secondary'>–ö–µ—Ä–∞–º–∏–∫–∞</Badge>
											<Badge variant='secondary'>–ü–æ—Å—É–¥–∞</Badge>
											<Badge variant='secondary'>–î–µ–∫–æ—Ä –¥–ª—è –¥–æ–º–∞</Badge>
											<Badge variant='secondary'>–í–∞–∑—ã</Badge>
											<Badge variant='secondary'>–ß–∞—à–∫–∏</Badge>
										</div>
									</CardContent>
								</Card>

								<Card>
									<CardContent className='p-6'>
										<h3 className='text-lg font-semibold mb-4'>
											–£—Å–ª–æ–≤–∏—è —Ä–∞–±–æ—Ç—ã
										</h3>
										<div className='space-y-3 text-sm'>
											<div>
												<span className='font-medium'>–í—Ä–µ–º—è –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è:</span>{' '}
												3-7 –¥–Ω–µ–π
											</div>
											<div>
												<span className='font-medium'>–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∑–∞–∫–∞–∑:</span>{' '}
												1 —à—Ç
											</div>
											<div>
												<span className='font-medium'>–î–æ—Å—Ç–∞–≤–∫–∞:</span> –ü–æ –≤—Å–µ–π
												–†–æ—Å—Å–∏–∏
											</div>
											<div>
												<span className='font-medium'>–û–ø–ª–∞—Ç–∞:</span> –ù–∞–ª–∏—á–Ω—ã–º–∏,
												–∫–∞—Ä—Ç–æ–π, –ø–µ—Ä–µ–≤–æ–¥–æ–º
											</div>
											<div>
												<span className='font-medium'>–í–æ–∑–≤—Ä–∞—Ç:</span> –í —Ç–µ—á–µ–Ω–∏–µ
												14 –¥–Ω–µ–π
											</div>
										</div>
									</CardContent>
								</Card>
							</div>

							<div className='space-y-6'>
								<Card>
									<CardContent className='p-6'>
										<h3 className='text-lg font-semibold mb-4'>–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è</h3>
										<div className='space-y-3'>
											{achievements.map(achievement => (
												<div
													key={achievement.id}
													className='flex items-center space-x-3'
												>
													<span className='text-2xl'>{achievement.icon}</span>
													<div>
														<div className='font-medium text-sm'>
															{achievement.title}
														</div>
														<div className='text-xs text-gray-500'>
															{achievement.date}
														</div>
													</div>
												</div>
											))}
										</div>
									</CardContent>
								</Card>

								<Card>
									<CardContent className='p-6'>
										<h3 className='text-lg font-semibold mb-4'>–ö–æ–Ω—Ç–∞–∫—Ç—ã</h3>
										<div className='space-y-3 text-sm'>
											<div className='flex items-center space-x-2'>
												<MapPin className='w-4 h-4 text-blue-500' />
												<span>{seller.location}</span>
											</div>
											<div className='flex items-center space-x-2'>
												<MessageCircle className='w-4 h-4 text-blue-500' />
												<span>–û—Ç–≤–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 2 —á–∞—Å–æ–≤</span>
											</div>
										</div>
										<Button className='w-full mt-4'>
											<MessageCircle className='w-4 h-4 mr-2' />
											–°–≤—è–∑–∞—Ç—å—Å—è
										</Button>
									</CardContent>
								</Card>
							</div>
						</div>
					</TabsContent>
				</Tabs>
			</div>
		</div>
	)
}
