import React, { useState } from "react";

const products = [
	{
		title: "–ö–µ—Ä–∞–º–∏—á–µ—Å–∫–∞—è –≤–∞–∑–∞",
		description: "–ö—Ä–∞—Å–∏–≤–∞—è —Ä—É—á–Ω–æ–π —Ä–∞–±–æ—Ç—ã –≤–∞–∑–∞ –¥–ª—è —Ü–≤–µ—Ç–æ–≤",
		category: "—É–∫—Ä–∞—à–µ–Ω–∏—è",
		userId: 2,
		userName: "John",
		userImage: "",
		Likes: [],
		comments: [
			{
				userId: "1",
				userName: "–ú–∞—Ä–∏—è –ö.",
				date: "2024-02-15",
				comment: "–û—Ç–ª–∏—á–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ! –û—á–µ–Ω—å –¥–æ–≤–æ–ª—å–Ω–∞ –ø–æ–∫—É–ø–∫–æ–π.",
				userImage:
					"https://images.unsplash.com/photo-1494790108755-2616b612b786?w=40&h=40&fit=crop&crop=face",
			},
		],
		image: [
			{
				url: "https://i.ibb.co/Tqm5YMq5/2025-09-29-164243.png",
				id: "R4zWYT4W",
			},
		],
		price: "1234",
		id: 3,
		user_id: 2,
	},
	{
		title: "–°—Ç–µ–∫–ª—è–Ω–Ω–∞—è –≤–∞–∑–∞",
		description: "–ú–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω–∞—è –≤–∞–∑–∞ –ø–æ–¥ —Å—É—Ö–æ—Ü–≤–µ—Ç—ã",
		category: "—É–∫—Ä–∞—à–µ–Ω–∏—è",
		userId: 3,
		userName: "Anna",
		userImage: "",
		Likes: [],
		comments: [],
		image: [
			{
				url: "https://i.ibb.co/bMwwWZm7/2025-09-28-112416.png",
				id: "VcnnjZ93",
			},
		],
		price: "250",
		id: 5,
		user_id: 3,
	},
	{
		title: "–§–∞—Ä—Ñ–æ—Ä–æ–≤–∞—è –≤–∞–∑–∞ —Å —Ü–≤–µ—Ç–∞–º–∏",
		description: "–≠–ª–µ–≥–∞–Ω—Ç–Ω–∞—è –≤–∞–∑–∞ —Å —Ä–æ—Å–ø–∏—Å—å—é —Ü–≤–µ—Ç–æ–≤",
		category: "—É–∫—Ä–∞—à–µ–Ω–∏—è",
		userId: 4,
		userName: "Maria",
		userImage: "",
		Likes: [],
		comments: [],
		image: [
			{
				url: "https://i.ibb.co/Tqm5YMq5/2025-09-29-164243.png",
				id: "R4zWYT4W",
			},
		],
		price: "450",
		id: 6,
		user_id: 4,
	},
];

// –ú–∞–ø–ø–∏–Ω–≥ —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω—ã—Ö —Å–ª–æ–≤ ‚Üí –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
const CATEGORY_KEYWORDS = {
	–≤–∞–∑–∞: "—É–∫—Ä–∞—à–µ–Ω–∏—è",
	–≤–∞–∑—ã: "—É–∫—Ä–∞—à–µ–Ω–∏—è",
	—É–∫—Ä–∞—à–µ–Ω–∏—è: "—É–∫—Ä–∞—à–µ–Ω–∏—è",
};

const Chat = () => {
	const [open, setOpen] = useState(false);
	const [messages, setMessages] = useState([
		{ from: "bot", text: "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ù–∞–ø–∏—à–∏—Ç–µ, —á—Ç–æ –∏—â–µ—Ç–µ üòä –ù–∞–ø—Ä–∏–º–µ—Ä: ¬´–≤–∞–∑—ã –æ—Ç 300 —Ä—É–±–ª–µ–π¬ª –∏–ª–∏ ¬´—É–∫—Ä–∞—à–µ–Ω–∏—è —Å —Ü–≤–µ—Ç–∞–º–∏ –æ—Ç Maria¬ª" },
	]);
	const [input, setInput] = useState("");

	const handleSend = () => {
		if (!input.trim()) return;

		const userMessage = input.trim();
		setMessages((prev) => [...prev, { from: "user", text: userMessage }]);
		setInput("");

		// –ö–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä—É–µ–º —Ç–∏–ø –∑–∞–ø—Ä–æ—Å–∞
		let commandType = "unknown";
		const lower = userMessage.toLowerCase();

		if (lower.includes("–≤–∞–∑") || lower.includes("—É–∫—Ä–∞—à–µ–Ω")) {
			commandType = "search_products";
		} else if (lower.includes("–ø—Ä–∏–≤–µ—Ç") || lower.includes("–∑–¥—Ä–∞–≤")) {
			commandType = "greeting";
		} else if (lower.includes("–ø–æ–º–æ—â—å") || lower.includes("—á—Ç–æ —É–º–µ–µ—à—å")) {
			commandType = "help";
		}

		// –û–±—Ä–∞–±–æ—Ç–∫–∞ —á–µ—Ä–µ–∑ switch/case
		switch (commandType) {
			case "greeting":
				setMessages((prev) => [
					...prev,
					{ from: "bot", text: "–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É –Ω–∞–π—Ç–∏ —Ç–æ–≤–∞—Ä—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ: ¬´–≤–∞–∑—ã –æ—Ç 300 —Ä—É–±–ª–µ–π¬ª." },
				]);
				break;

			case "help":
				setMessages((prev) => [
					...prev,
					{
						from: "bot",
						text: "–í—ã –º–æ–∂–µ—Ç–µ –∏—Å–∫–∞—Ç—å —Ç–∞–∫:\n‚Ä¢ ¬´–≤–∞–∑—ã –æ—Ç 300 —Ä—É–±–ª–µ–π¬ª\n‚Ä¢ ¬´—É–∫—Ä–∞—à–µ–Ω–∏—è —Å —Ü–≤–µ—Ç–∞–º–∏ –æ—Ç Maria¬ª\n‚Ä¢ ¬´–Ω–∞–π–¥–∏ –≤–∞–∑—É –¥–æ 500 –æ—Ç Anna¬ª",
					},
				]);
				break;

			case "search_products": {
				// –ü–∞—Ä—Å–∏–Ω–≥ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
				let minPrice = 0;
				let maxPrice = Infinity;
				let seller = null;
				let category = null;
				let keywords = [];

				// –ö–∞—Ç–µ–≥–æ—Ä–∏—è
				for (const [word, cat] of Object.entries(CATEGORY_KEYWORDS)) {
					if (lower.includes(word)) {
						category = cat;
						break;
					}
				}

				// –¶–µ–Ω–∞ "–æ—Ç"
				const fromMatch = lower.match(/–æ—Ç\s+(\d+)/);
				if (fromMatch) minPrice = parseInt(fromMatch[1], 10);

				// –¶–µ–Ω–∞ "–¥–æ"
				const toMatch = lower.match(/–¥–æ\s+(\d+)/);
				if (toMatch) maxPrice = parseInt(toMatch[1], 10);

				// –ü—Ä–æ–¥–∞–≤–µ—Ü "–æ—Ç ..."
				const sellerMatch = lower.match(/–æ—Ç\s+([–∞-—èa-z]+)/i);
				if (sellerMatch) seller = sellerMatch[1];

				// –û—á–∏—Å—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç —Å–ª—É–∂–µ–±–Ω—ã—Ö —Å–ª–æ–≤
				let clean = lower
					.replace(/–æ—Ç\s+\d+/g, "")
					.replace(/–¥–æ\s+\d+/g, "")
					.replace(/–æ—Ç\s+[–∞-—èa-z]+/gi, "")
					.replace(/–≤–∞–∑[–∞—ã]?/g, "")
					.replace(/—É–∫—Ä–∞—à–µ–Ω[–∏—è]/g, "")
					.replace(/—Ä—É–±–ª[–µ–π—è]/g, "")
					.trim();

				if (clean) {
					keywords = clean.split(/\s+/).filter((w) => w.length > 2);
				}

				// –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è
				const results = products.filter((p) => {
					// –ö–∞—Ç–µ–≥–æ—Ä–∏—è
					if (category && p.category !== category) return false;

					// –¶–µ–Ω–∞
					const price = parseInt(p.price, 10);
					if (price < minPrice || price > maxPrice) return false;

					// –ü—Ä–æ–¥–∞–≤–µ—Ü
					if (seller && !p.userName.toLowerCase().includes(seller.toLowerCase())) return false;

					// –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–∏
					if (keywords.length > 0) {
						const titleDesc = (p.title + " " + p.description).toLowerCase();
						return keywords.every((kw) => titleDesc.includes(kw));
					}

					return true;
				});

				if (results.length === 0) {
					setMessages((prev) => [
						...prev,
						{ from: "bot", text: "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É üòï" },
					]);
				} else {
					setMessages((prev) => [
						...prev,
						{
							from: "bot",
							text: `–ù–∞—à—ë–ª ${results.length} –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Ç–æ–≤–∞—Ä${results.length === 1 ? "" : "–æ–≤"}:`,
							products: results,
						},
					]);
				}
				break;
			}

			default:
				setMessages((prev) => [
					...prev,
					{
						from: "bot",
						text: "–Ø –ø–æ–∫–∞ –ø–æ–Ω–∏–º–∞—é —Ç–æ–ª—å–∫–æ –∑–∞–ø—Ä–æ—Å—ã –ø—Ä–æ –≤–∞–∑—ã –∏ —É–∫—Ä–∞—à–µ–Ω–∏—è. –ù–∞–ø—Ä–∏–º–µ—Ä: ¬´–≤–∞–∑—ã –æ—Ç 300 —Ä—É–±–ª–µ–π¬ª.",
					},
				]);
		}
	};

	return (
		<div>
			{/* –ö–Ω–æ–ø–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —á–∞—Ç–∞ */}
			<button
				onClick={() => setOpen(!open)}
				className="px-4 py-2 text-transparent bg-clip-text font-bold bg-gradient-to-bl from-blue-500 to-pink-500 rounded"
			>
				–ß–∞—Ç
			</button>

			{/* –û–∫–Ω–æ —á–∞—Ç–∞ */}
			{open && (
				<div
					onClick={() => setOpen(false)}
					className="w-full fixed left-0 top-0 bg-black/50 z-[10] h-[100vh]"
				>
					<div
						onClick={(e) => e.stopPropagation()}
						className="h-[70vh] w-[50%] max-w-2xl m-auto my-[15vh] bg-white shadow-xl rounded-lg border flex flex-col"
					>
						<div className="p-3 border-b font-bold text-lg">–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç</div>
						<div className="flex-1 overflow-y-auto p-3 space-y-3">
							{messages.map((m, i) => (
								<div
									key={i}
									className={`p-3 rounded-lg max-w-[85%] ${m.from === "bot" ? "bg-gray-100 self-start" : "bg-blue-100 self-end ml-auto"
										}`}
								>
									<div>{m.text}</div>
									{/* –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤, –µ—Å–ª–∏ –µ—Å—Ç—å */}
									{m.products && (
										<div className="mt-3 space-y-2">
											{m.products.map((product) => (
												<div
													key={product.id}
													className="border rounded p-2 flex items-start gap-2"
												>
													<img
														src={product.image[0]?.url?.trim()}
														alt={product.title}
														className="w-12 h-12 object-cover rounded"
														onError={(e) => (e.target.style.display = "none")}
													/>
													<div className="text-sm">
														<div className="font-medium">{product.title}</div>
														<div className="text-gray-600">–æ—Ç {product.userName}</div>
														<div className="font-bold text-blue-600">{parseInt(product.price).toLocaleString()} ‚ÇΩ</div>
														<a
															href={`/marketplace/${product.id}`}
															target="_blank"
															rel="noopener noreferrer"
															className="text-blue-500 hover:underline text-xs"
														>
															–ü–æ–¥—Ä–æ–±–Ω–µ–µ ‚Üí
														</a>
													</div>
												</div>
											))}
										</div>
									)}
								</div>
							))}
						</div>
						<div className="p-2 border-t flex gap-2">
							<input
								value={input}
								onChange={(e) => setInput(e.target.value)}
								onKeyDown={(e) => e.key === "Enter" && handleSend()}
								placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –≤–∞–∑—ã –æ—Ç 300 —Ä—É–±–ª–µ–π —Å —Ü–≤–µ—Ç–∞–º–∏ –æ—Ç Maria"
								className="flex-1 border rounded px-3 py-2 focus:outline-none focus:ring-1 focus:ring-blue-500"
							/>
							<button
								onClick={handleSend}
								className="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition"
							>
								‚û§
							</button>
						</div>
					</div>
				</div>
			)}
		</div>
	);
};

export default Chat;